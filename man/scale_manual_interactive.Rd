% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00_scale.R
\name{scale_manual_interactive}
\alias{scale_manual_interactive}
\alias{scale_colour_manual_interactive}
\alias{scale_color_manual_interactive}
\alias{scale_fill_manual_interactive}
\title{Create your own interactive discrete scale}
\usage{
scale_colour_manual_interactive(..., values, data_id = NULL,
  onclick = NULL, tooltip = NULL, aesthetics = "colour")

scale_color_manual_interactive(..., values, data_id = NULL,
  onclick = NULL, tooltip = NULL, aesthetics = "colour")

scale_fill_manual_interactive(..., values, data_id = NULL,
  onclick = NULL, tooltip = NULL, aesthetics = "fill")
}
\arguments{
\item{...}{Arguments passed on to \code{discrete_scale}
\describe{
  \item{palette}{A palette function that when called with a single integer
argument (the number of levels in the scale) returns the values that
they should take.}
  \item{breaks}{One of:
\itemize{
\item \code{NULL} for no breaks
\item \code{waiver()} for the default breaks computed by the
transformation object
\item A character vector of breaks
\item A function that takes the limits as input and returns breaks
as output
}}
  \item{limits}{A character vector that defines possible values of the scale
and their order.}
  \item{drop}{Should unused factor levels be omitted from the scale?
The default, \code{TRUE}, uses the levels that appear in the data;
\code{FALSE} uses all the levels in the factor.}
  \item{na.translate}{Unlike continuous scales, discrete scales can easily show
missing values, and do so by default. If you want to remove missing values
from a discrete scale, specify \code{na.translate = FALSE}.}
  \item{na.value}{If \code{na.translate = TRUE}, what value aesthetic
value should missing be displayed as? Does not apply to position scales
where \code{NA} is always placed at the far right.}
  \item{scale_name}{The name of the scale}
  \item{name}{The name of the scale. Used as the axis or legend title. If
\code{waiver()}, the default, the name of the scale is taken from the first
mapping used for that aesthetic. If \code{NULL}, the legend title will be
omitted.}
  \item{labels}{One of:
\itemize{
\item \code{NULL} for no labels
\item \code{waiver()} for the default labels computed by the
transformation object
\item A character vector giving labels (must be same length as \code{breaks})
\item A function that takes the breaks as input and returns labels
as output
}}
  \item{guide}{A function used to create a guide or its name. See
\code{\link[=guides]{guides()}} for more info.}
  \item{super}{The super class to use for the constructed scale}
}}

\item{values}{a set of aesthetic values to map data values to. If this
is a named vector, then the values will be matched based on the names.
If unnamed, values will be matched in order (usually alphabetical) with
the limits of the scale. Any data values that don't match will be
given \code{na.value}.}

\item{data_id}{a named character vector where names are level values and values are
identifiers. Identifiers are available as reactive input values in shiny applications.}

\item{onclick}{a named character vector where names are level values and values are
an associated JavaScript action. Action will be executed when a key will be clicked}

\item{tooltip}{a named character vector where names are level values and values are
an associated tooltip value, text and html are supported.}

\item{aesthetics}{Character string or vector of character strings listing the
name(s) of the aesthetic(s) that this scale works with. This can be useful, for
example, to apply colour settings to the \code{colour} and \code{fill} aesthetics at the
same time, via \code{aesthetics = c("colour", "fill")}.}
}
\description{
The scale is based on \code{\link[ggplot2]{scale_colour_manual}}.
These functions allow you to make interactive legend's keys associated with an
interactive layer.

For a discrete interactive scale, a single tooltip, data_id and onclick
is available for each level. The primary goal when these function has been
written was to enable a click on a legend's key in a shiny application.
}
\seealso{
Other interactive scale: \code{\link{scale_gradient_interactive}}
}
\concept{interactive scale}
