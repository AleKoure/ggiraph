% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/girafe.R
\name{girafe}
\alias{girafe}
\title{create a girafe object}
\usage{
girafe(code, ggobj = NULL, width = 0.9, pointsize = 12,
  width_svg = 6, height_svg = 5, xml_reader_options = list(), ...)
}
\arguments{
\item{code}{Plotting code to execute}

\item{ggobj}{ggplot objet to print. argument \code{code} will
be ignored if this argument is supplied.}

\item{width}{widget width ratio (0 < width <= 1). Unused within shiny
applications or flexdashboard documents. See below.}

\item{pointsize}{the default pointsize of plotted text in pixels, default to 12.}

\item{width_svg, height_svg}{The width and height of the graphics region in inches.
The default values are 6 and 5 inches. This will define the aspect ratio of the
graphic as it will be used to define viewbox attribute of the SVG result.}

\item{xml_reader_options}{read_xml additional arguments to be used
when parsing the svg result. This feature can be used to parse
huge svg files by using \code{list(options = "HUGE")} but this
is not recommanded.}

\item{...}{arguments passed on to \code{\link[rvg]{dsvg}}}
}
\description{
Create an interactive graphic to be used in a web browser.
}
\section{Widget options}{

girafe animations can be customized with function \code{\link{girafe_options}}.
Options are available to customize tooltips, hover effects, zoom effects
and selection effects.
}

\section{Widget sizing}{

girafe graphics are responsive, which mean, they will be resized
according to their container. There are two responsive behavior
implementation: one for Shiny applications and flexdashboard documents
and one for other documents (i.e. R markdown and \code{saveWidget}).

When a girafe graphic is in a Shiny application or in a flexdashboard
graphic will be resized according to the arguments \code{width} and
\code{height} of the function \code{girafeOutput}. Default
values are '100%' and '500px'. These arguments determine the
outer bounding box (and \code{width_svg} and \code{height_svg}
determines the proportions.

When a girafe graphic is in an R markdown document (producing an HTML
document), the graphic will be resized according to the argument \code{width} of the
function \code{girafe}. Its value is beeing used to define a relative
width of the graphic within its HTML container. Its height is automatically
adjusted regarding to the argument \code{width} and the ratio between
\code{width_svg} and \code{height_svg}.

If this behavior does not fit with your need, I recommand you to use
package widgetframe that wraps htmlwidgets inside a responsive iframe.
}

\examples{
library(ggplot2)

dataset <- mtcars
dataset$carname = row.names(mtcars)

gg_point = ggplot( data = dataset,
    mapping = aes(x = wt, y = qsec, color = disp,
    tooltip = carname, data_id = carname) ) +
  geom_point_interactive() + theme_minimal()

x <- girafe(ggobj = gg_point, width = 0.7)

if(interactive()){
  print(x)
}
}
